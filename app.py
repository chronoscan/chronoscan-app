import streamlit as st
from PIL import Image
import json
from ultralytics import YOLO
import datetime

# Charger le mod√®le YOLOv8 pr√©-entra√Æn√©
model = YOLO('yolov8n.pt')

# Charger la base de donn√©es des p√©riodes d'objets
with open("object_dates.json", "r") as f:
    object_periods = json.load(f)

st.title("üì∏ ChronoScan ‚Äì D√©tection d'anachronismes")
st.write("T√©l√©verse une image, choisis une √©poque, et je te dirai si des objets sont hors du temps.")

# S√©lection de l'√©poque cible
target_year = st.number_input("Ann√©e de r√©f√©rence", min_value=1000, max_value=2100, value=1920)

# T√©l√©versement de l'image
uploaded_file = st.file_uploader("Choisir une image", type=["jpg", "jpeg", "png"])

if uploaded_file:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="Image t√©l√©vers√©e", use_column_width=True)

    # Ex√©cution de la d√©tection d'objets
    st.write("üîç Analyse en cours...")
    results = model.predict(image)

    # R√©sultats
    detected_labels = results[0].names
    detected_objects = results[0].boxes.cls.tolist()
    all_detected = [detected_labels[int(idx)] for idx in detected_objects]

    st.subheader("Objets d√©tect√©s :")
    st.write(", ".join(set(all_detected)))

    st.subheader("Analyse des anachronismes :")
    for obj in set(all_detected):
        if obj in object_periods:
            start, end = object_periods[obj]
            if not (start <= target_year <= end):
                st.error(f"‚ùå Anachronisme : **{obj}** n'existait pas en {target_year} (existe entre {start}‚Äì{end})")
            else:
                st.success(f"‚úÖ {obj} est coh√©rent avec l'√©poque.")
        else:
            st.warning(f"‚ö†Ô∏è Objet d√©tect√© **{obj}** : p√©riode inconnue dans la base.")
